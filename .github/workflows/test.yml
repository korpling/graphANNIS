name: Automated tests
on:
  push:
    branches: [master, develop, staging, trying]
  pull_request:
    branches: [master, develop]
env:
  RUSTFLAGS: "-C debuginfo=0"
jobs:
  test_linux:
    name: Execute automated tests on Ubuntu Linux
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - run: cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
      - run: misc/download-mdbook.sh 0.3.5
        env:
          OS_NAME: linux
      - name: Generate the documentation
        run: mdbook build docs/
  test_windows:
    name: Execute automated tests on Windows
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - run: cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
  test_mac:
    name: Execute automated tests on OSX
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - run: cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
  long_running_tests:
    name: Execute search tests
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - uses: actions/cache@v2
        id: corpus-cache
        with:
          path: |
            relannis
            data
          key: ${{ runner.os }}-search-v1-compatible-${{ hashFiles('data/**', 'relannnis/**') }}
      - name: Download test corpora
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: test -d relannis/GUM/ -a -d relannis/pcc2.1/ -a -d relannis/subtok.demo || "./misc/download-test-corpora.sh"
      - name: Build CLI binary
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: cargo build --release --bin annis
      - name: Import GUM corpus
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: ./target/release/annis data --cmd 'import relannis/GUM'
      - name: Import pcc2.1 corpus-cache
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: ./target/release/annis data --cmd 'set-disk-based on' --cmd 'import relannis/pcc2.1'
      - name: Import subtok.demo corpus
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: ./target/release/annis data --cmd 'import relannis/subtok.demo'
      - name: Run integration tests
        run: cargo test --release -- --ignored
        working-directory: graphannis
