name: Automated tests
on:
  push:
    branches: [master, develop, staging, trying]
  pull_request:
    branches: [master, develop]
jobs:
  test_linux:
    name: Execute automated tests on Ubuntu Linux
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - run: cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
      - run: misc/download-mdbook.sh 0.3.5
        env:
          OS_NAME: linux
      - name: Generate the documentation
        run: mdbook build docs/
  test_windows:
    name: Execute automated tests on Windows
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - run: cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
  test_mac:
    name: Execute automated tests on OSX
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - run: cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
  long_running_tests:
    name: Execute search tests
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1.3.0
      - uses: actions/cache@v2
        with:
          path: |
            relannis
            data
          key: search-tests-${{ hashFiles('**/Cargo.toml')}}
      - name: Download test corpora if necessary
        run: test -d relannis/GUM/ -a -d relannis/pcc2.1/ || "./misc/download-test-corpora.sh"
      - name: Build CLI binary (if one of the data directories is missing)
        run: test -d data/GUM/current -a -d data/pcc2.1/current || cargo build --release --bin annis
      - name: Import GUM corpus if necessary
        run: test -d data/GUM/current || ./target/release/annis data --cmd 'import relannis/GUM'
      - name: Import pcc2.1 corpus if necessary
        run: test -d data/pcc2.1/current || ./target/release/annis data --cmd 'set-disk-based on' --cmd 'import relannis/pcc2.1'
      - name: Run integration tests
        run: cargo test --release -- --ignored
        working-directory: graphannis
