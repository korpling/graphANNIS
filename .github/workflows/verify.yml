name: Verify

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  merge-request-checks:
    name: Run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install diff-cover
        uses: threeal/pipx-install-action@v1.0.0
        with:
          packages: diff_cover
      - uses: actions-rust-lang/setup-rust-toolchain@v1.4.4
        with:
          toolchain: stable
      - uses: actions/cache@v4
        id: corpus-cache
        with:
          path: |
            relannis
            data
            data_ondisk
          key: ${{ runner.os }}-codecov-${{ hashFiles('graphannis/tests/searchtest.rs','graphannis/tests/searchtest_queries.csv', 'graphannis/build.rs') }}
      - name: Download test corpora
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: test -d relannis/GUM/ -a -d relannis/pcc2.1/ -a -d relannis/subtok.demo || "./misc/download-test-corpora.sh"
      - name: Build CLI binary
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: cargo build --release --bin annis
      - name: Import GUM corpus (memory)
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: ./target/release/annis data --cmd 'import relannis/GUM'
      - name: Import pcc2.1 corpus (memory)
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: ./target/release/annis data --cmd 'import relannis/pcc2.1'
      - name: Import subtok.demo corpus (memory)
        if: steps.corpus-cache.outputs.cache-hit != 'true'
        run: ./target/release/annis data --cmd 'import relannis/subtok.demo'
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Run verify.sh
        id: pr
        run: |
          {
            echo 'COVERAGE<<EOF'
            ./verify.sh
            echo EOF
          } >> "$GITHUB_ENV"
          echo "result=$COVERAGE" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_OUTPUT: TRUE
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            ${{ steps.pr.outputs.result }}